<project name="zm-native" default="all">

  <import file="../build-common.xml" />

  <target name="all" depends="publish-local,generate-native-headers" />

  <target name="jar" depends="compile" description="Creates the jar file">
    <antcall target="zextras-jar">
      <param name="implementation.title" value="Zimbra Native" />
    </antcall>
  </target>

  <!-- mailboxd will not start without zm-native library, so this target does not attempt to start it -->
  <target name="undeploy-no-stop">
    <delete verbose="true">
      <fileset dir="${common.jars.dir}" includes="zm-native*.jar,native*.jar" />
      <fileset dir="${jetty.common.jars.dir}" includes="zm-native*.jar,native*.jar" />
    </delete>
  </target>

  <target name="undeploy" depends="stop-webserver">
    <antcall target="undeploy-no-stop" />
  </target>

  <!-- relies on undeploy to stop the webserver -->
  <target name="deploy-no-start" depends="jar,set-dev-version,undeploy">
    <!-- until /opt/zextras/bin/zm* scripts are fixed to use versioned zm-* jars, we have to deploy this jar with a fixed name -->
    <copy file="${build.dir}/${jar.file}" tofile="${common.jars.dir}/native.jar" />
    <copy file="${build.dir}/${jar.file}" tofile="${jetty.common.jars.dir}/${jar.file}" />
  </target>

  <target name="deploy" depends="deploy-no-start">
    <antcall target="start-webserver" />
  </target>

  <path id="build.class.path">
    <path refid="class.path" />
    <pathelement location="${build.dir}/classes" />
  </path>

  <target name="generate-native-headers" depends="compile,resolve" description="Java to Native">
    <javac srcdir="src/java/com/zimbra/znative" nativeheaderdir="${build.dir}" classpathref="build.class.path" destdir="${build.dir}" includes="IO.java">
      <compilerarg value="-Xlint:deprecation" />
      <compilerarg value="-Xlint:unchecked" />
    </javac>
    <javac srcdir="src/java/com/zimbra/znative" nativeheaderdir="${build.dir}" classpathref="build.class.path" destdir="${build.dir}" includes="Util.java">
      <compilerarg value="-Xlint:deprecation" />
      <compilerarg value="-Xlint:unchecked" />
    </javac>
  </target>

  <target name="clean" description="Removes build files and undeploys extension">
    <delete dir="${build.dir}" />
  </target>

  <target name="dist" depends="jar" description="Copies jar to dist dir">
    <copy todir="${dist.dir}">
      <fileset dir="${build.dir}" />
      <globmapper from="zm-native-*.jar" to="zm-native.jar" />
    </copy>
  </target>
</project>